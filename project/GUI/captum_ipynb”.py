# -*- coding: utf-8 -*-
"""Captum.ipynb”

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/135uPpLYDqf6mKFBWdMTxe_cMFaWKB8o4

# Run streamlit app from a Google Colab Notebook
"""

!pip install -q streamlit

"""download preptrained model and dataset
### also overrides when if downloaded again
"""

import os
if not os.path.exists("oxford-iiit-pet.zip"):
  os.system('curl -O https://dlcv2023.s3.eu-north-1.amazonaws.com/oxford-iiit-pet.zip')
if not os.path.exists("resnet18_finetuned.pkl"):
  os.system('curl -O https://dlcv2023.s3.eu-north-1.amazonaws.com/resnet18_finetuned.pkl')

# Commented out IPython magic to ensure Python compatibility.
# # install needed dependancies
# %%capture
# %%bash
# #pip install fastai2
# # install captum from repo
# git clone https://github.com/tendermonster/captum.git
# pip install captum/ fastai2 psutil

from matplotlib.colors import LinearSegmentedColormap
import numpy as np
from fastai.vision.all import PILImage, load_learner, untar_data, get_image_files, ImageDataLoaders, ClassificationInterpretation, Resize, cnn_learner, URLs, resnet18, error_rate
from captum.attr import IntegratedGradients
from captum.attr import GradientShap
from captum.attr import Occlusion
from captum.attr import Saliency
from captum.attr import NoiseTunnel
from captum.attr import visualization as viz

import os
if not os.path.exists("./resnet18_finetuned.pkl"):
  # if file does not exist finetune resnet18 on the dataset
  # finetune the model on the PETS dataset
  learn = cnn_learner(dls, resnet18, metrics=error_rate)
  learn.fine_tune(epochs=1)
  # Basic interpertation of the model prediected classes vs. actual ones.
  interp = ClassificationInterpretation.from_learner(learn)
  # Visualize top losses, e.g. to check if the images themselves are correctly annotated.
  interp.plot_confusion_matrix()
  interp.plot_top_losses(5, nrows=1)
  # save the model
  learn.export('./resnet18_finetuned.pkl')
else:
  # load the model
  #learn_inf = load_learner(cpu=False, fname='./resnet18_finetuned.pkl')

"""## Create a streamlit app example

"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import random
# from fastai.vision.all import PILImage, load_learner, untar_data, get_image_files, ImageDataLoaders, ClassificationInterpretation, Resize, cnn_learner, URLs, resnet18, error_rate
# 
# path = './oxford-iiit-pet/images'
# imgs = get_image_files(path)
# 
# idx = random.randint(0, len(imgs))
# images = PILImage.create(imgs[idx])
# image = st.image(images)
#

"""## Install localtunnel"""

!npm install localtunnel

"""## Run streamlit in background"""

!streamlit run /content/app.py &>/content/logs.txt &

"""## Expose the port 8501
Then just click in the `url` showed.

A `log.txt`file will be created.
"""

!npx localtunnel --port 8501

from google.colab import drive
drive.mount('/content/drive')

